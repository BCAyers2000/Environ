TO DO
* fix calls to v_h_of_rho_r, gradv_h_of_rho_r, convolution_fft, external_gradient, external_laplacian, external_hessian
* profile core_fft routines

* when fixing parallelization, remember to fix ionode and comm in environ_output.f90
* fix input readin in parser, why is it using intra_image_comm?
* recvec needs to be moved into a derived data type
* cleanup backward compatibility

* core_fft.f90
  add tests for compatibility between inputs
* calc_fd_gradient.f90
  cleanup dependencies from Modules
  fix communicators for parallelization
* tools_generate_functions.f90
  move away planar_average
* environ_output.f90
  fix write_cube that depends on dfftp and parallelization
* what is now tools_fd_gradient.f90 could become a core_fd.f90 with only some of the core functionalities (namely gradients and laplacians)
  finite differences are anyway probably not going to be very useful, we may want to remove it

* correction_mt.f90
  fix correction_mt (only initial calculation and calc_vmt is needed)
  fix calls to ws_base
  fix communicators for parallelization
* ws_base.f90 (now tools_ws.f90) is only needed by Martyna-Tuckerman
  remove call to invmat.f90 to invert 3x3 matrix
* include Modules/sort.f90

DONE
  fix an fft_core type that contains dfftp,  gvectors(ngm, gg, gstart, g), environ_cell(omega, alat, tpiba, tpiba2), gamma_only
  move convolution_fft outside of tools_generate_functions.f90 and cleanup dependencies
  remove feval from environ_input.f90, so that we don't need modules_wrappers.f90. Merge your changes into this branch
  clean up/fix modules_parser.f90 move env_errore --> errore() stdout --> program_unit env_mp --> mp
  UtilXLib and FFTXlib should only be compiled if Environ is not inside QE, otherwise Environ should use the QE libraries.

DOUBTS
  do we want to keep martyna-tuckerman?

PLANS
  as first step let's comment out the martyna-tuckerman part
  pass values of derived data types, as a second step we'll need to initialize them inside environ.
  we could start by compiling Environ with its internal UtilXlibs and FFTlibs, in case we need to change something

NOTES:
  for ffts we need both the descriptor (dffte) and a stick_map (smap)
  to initialize the fft descriptor we need the parallelization (communicator) and: gamma_only (true), lpara (either T or F),
  at, bg, gcutm, fft_fact and nyfft
       fft_fact(1:3) are determined inside symm_base according to this: factors that must be present in FFT grid dimensions
       in order to ensure that fractional translations are commensurate with FFT grids. fractional translations are present
       is we have supercells and we want to keep symmetry. we may want to give up symmetry and keep fft_fact(:) = 1
       nyfft is related to the parallelization scheme, we may want ot keep nyfft=1 and don't push parallelization too much
  to allocate gvect we only need the fft results (number of gvectors in each processor) and the parallelization
  to initialize gvect we need to call ggen, which is in recvec_subs.f90, and we need: dfftp, gamma_only, at, bg, gcutm, ngm_g, ngm
  we may want to rewrite ggen to simplify it a bit and avoid computing this that are not used by environ (mill).
